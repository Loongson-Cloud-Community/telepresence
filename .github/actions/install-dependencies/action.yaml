name: "Install dependencies"
description: "Install dependencies required by the runner"
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '~1.21.0'
    - uses: azure/setup-kubectl@v3
      with:
        version: 'v1.25.3'
      id: kubectl

    - if: runner.os == 'Linux'
      name: install Linux dependencies
      shell: bash
      run: |
        sudo rm -f /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y sshfs socat libfuse-dev make jq
        sudo sh -c 'echo user_allow_other >> /etc/fuse.conf'

    - if: runner.os == 'macOS' && runner.arch == 'X64'
      name: install macOS-x86 dependencies
      shell: bash
      env:
        HOMEBREW_NO_INSTALL_FROM_API: ""
      run: |
        brew untap homebrew/core || true
        brew untap homebrew/cask || true
        brew update
        brew install --cask macfuse
        brew install gromgit/fuse/sshfs-mac
        brew link --overwrite sshfs-mac
        brew install jq

    - if: runner.os == 'macOS' && runner.arch == 'ARM64'
      name: install macOS-arm64 dependencies
      shell: bash
      env:
        HOMEBREW_NO_INSTALL_FROM_API: ""
      run: |
        arch -arm64 brew untap homebrew/core || true
        arch -arm64 brew untap homebrew/cask || true
        arch -arm64 brew update
        arch -arm64 brew install --cask macfuse
        arch -arm64 brew install gromgit/fuse/sshfs-mac
        arch -arm64 brew link --overwrite sshfs-mac
        arch -arm64 brew install jq

    - if: runner.os == 'Windows'
      name: install Windows dependencies
      shell: powershell
      run: |
        choco install make zip

        # Download sshfs
        curl -o winfsp.msi https://github.com/billziss-gh/winfsp/releases/download/v1.11/winfsp-1.11.22176.msi
        curl -o sshfs-win.msi https://github.com/billziss-gh/sshfs-win/releases/download/v3.7.21011/sshfs-win-3.7.21011-x64.msi

        Start-Process msiexec -Wait -verb runAs -Args "/i winfsp.msi /passive /qn /L*V winfsp-install.log"
        Start-Process msiexec -Wait -verb runAs -Args "/i sshfs-win.msi /passive /qn /L*V sshfs-win-install.log"

        [Environment]::SetEnvironmentVariable("Path", "C:\\;C:\\Program Files\\SSHFS-Win\\bin;$ENV:Path", "Machine")
